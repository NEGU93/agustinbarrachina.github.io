{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EventService = /*#__PURE__*/(() => {\n  class EventService {\n    constructor(http) {\n      this.http = http;\n      this.eventUrl = 'assets/events.json';\n    }\n\n    getEvents() {\n      return this.http.get(this.eventUrl).pipe(tap(data => console.log('All: ' + JSON.stringify(data))), catchError(this.handleError));\n    }\n\n    handleError(err) {\n      let errorMessage = '';\n\n      if (err.error instanceof ErrorEvent) {\n        errorMessage = `An error occurred: ${err.error.message}`;\n      } else {\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n      }\n\n      console.error(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  EventService.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventService;\n})();","map":null,"metadata":{},"sourceType":"module"}